version: '3.8'

services:
  mysql:
    build:
      context: ./docker/mysql
    container_name: app-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: appdb
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppassword
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "appuser", "-papppassword"]
      interval: 10s
      timeout: 5s
      retries: 5

  springboot:
    build:
      context: .
      dockerfile: ./docker/springboot/Dockerfile
    container_name: app-springboot
    depends_on:
      mysql:
        condition: service_healthy
    
    ports:
      - "8080:8080"
      - "5005:5005"  # Expose debug port
    volumes:
      - ./app:/app  # Bind mount the app directory
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/appdb?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: appuser
      SPRING_DATASOURCE_PASSWORD: apppassword
    networks:
      - app-network

  # springboot:
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile
  #   container_name: app-springboot-railway
  #   depends_on:
  #     mysql:
  #       condition: service_healthy
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/appdb?useSSL=false&allowPublicKeyRetrieval=true
  #     SPRING_DATASOURCE_USERNAME: appuser
  #     SPRING_DATASOURCE_PASSWORD: apppassword
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
